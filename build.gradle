import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '2.7.15-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.6.21'
}

group = 'br.com.angelito'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    // Open API
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Wiremock to mock external APIs
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    // Rest Assured to test current API
    testImplementation('io.rest-assured:rest-assured:4.5.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    testImplementation 'io.rest-assured:json-path:4.5.1'
    testImplementation 'io.rest-assured:json-schema-validator:4.5.1'
    testImplementation 'io.rest-assured:xml-path:4.5.1'
    testImplementation 'io.rest-assured:kotlin-extensions:4.5.1'
    testImplementation "io.rest-assured:spring-mock-mvc:4.5.1"
    // Utilities (https://www.baeldung.com/hamcrest-core-matchers)
    testImplementation 'org.hamcrest:hamcrest:2.2'

}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '11'
    }
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events(TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED)
        exceptionFormat = TestExceptionFormat.SHORT
        showCauses = true
        showExceptions = true
        showStackTraces = false
    }
}
